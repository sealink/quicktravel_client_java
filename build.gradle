plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id "maven-publish"
    id 'java-library'
    id 'net.nemerosa.versioning' version '2.15.0'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

apply plugin: 'checkstyle'

group 'au.com.sealink.quicktravel.client'

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

versioning {
    branchEnv = ['TRAVIS_BRANCH', 'TRAVIS_TAG', 'TRAVIS_PULL_REQUEST_BRANCH', 'GIT_BRANCH']
}

sourceCompatibility = 1.8
if(versioning.info.tag == null) {
    version = versioning.info.display
}
else {
    version = versioning.info.tag
}


checkstyle {
    toolVersion = '8.1'
}


repositories {
    google()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'net.danlew:android.joda:2.10.7.1'
    testCompile 'joda-time:joda-time:2.10.12'
    testCompile 'junit:junit:4.13.2'
    testCompile 'com.squareup.okhttp3:mockwebserver:4.9.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "jmortlock"
            name "John Mortlock"
            email "john.mortlock@sealink.com.au"
        }
    }

    scm {
        url "https://github.com/sealink/quicktravel_client_java.git"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            groupId 'au.com.sealink.quicktravel.client'
            artifactId 'quicktravel_client'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'QuickTravel Java Bindings')
                root.appendNode('name', 'QuickTravel Client')
                root.appendNode('url', 'https://github.com/sealink/quicktravel_client_java')
                root.children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/sealink/quicktravel_client_java"
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}
